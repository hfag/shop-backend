"use strict";let logField=null,dropField=null,progressBar=null,downloadJSON=null,downloadCSV=null,reader=null;const attributeMeta=[{name:"Ausführung",columnKey:"Ausführung",slug:"model",position:50,visibility:!0,variation:!0,isTaxonomy:!1},{name:"Pfeilrichtung",columnKey:"Pfeilrichtung",slug:"arrow-dir",position:0,visibility:!0,variation:!0,isTaxonomy:!1},{name:"Grösse",columnKey:"Grösse",slug:"size",position:1,visibility:!0,variation:!0,isTaxonomy:!0},{name:"Jahr",columnKey:"Jahr",slug:"year",position:60,visibility:!0,variation:!0,isTaxonomy:!1},{name:"Farbe",columnKey:"Farbe",slug:"color",position:70,visibility:!0,variation:!0,isTaxonomy:!1},{name:"Format",columnKey:"Format",slug:"format",position:80,visibility:!0,variation:!0,isTaxonomy:!1},{name:"Leuchtdichte",columnKey:"Leuchtdichte_mcd",slug:"luminance",position:40,visibility:!0,variation:!0,isTaxonomy:!0},{name:"Material",columnKey:"Material",slug:"material",position:10,visibility:!0,variation:!0,isTaxonomy:!0},{name:"Norm",columnKey:"Norm",slug:"norm",position:90,visibility:!0,variation:!0,isTaxonomy:!1},{name:"PSPA Klasse",columnKey:"PSPA_Class",slug:"pspa-class",position:100,visibility:!0,variation:!0,isTaxonomy:!1},{name:"Ursprungsland",columnKey:"Ursprungsland",slug:"country",position:120,visibility:!0,variation:!0,isTaxonomy:!0},{name:"Druckeigenschaft(-en)",columnKey:"Eigenschaft_Druck",slug:"print-property",position:110,visibility:!0,variation:!0,isTaxonomy:!0},{name:"Einheit",columnKey:"Einheit",slug:"unit",position:1e3,visibility:!0,variation:!0,isTaxonomy:!0},{name:"Symbolnummer",columnKey:"Symbolnummer",slug:"symbol-number",position:990,visibility:!0,variation:!0,isTaxonomy:!0},{name:"Inhalt",columnKey:"Inhalt",slug:"content",position:1,visibility:!0,variation:!0,isTaxonomy:!1},{name:"Variante",columnKey:"Variante",slug:"product_variation",position:0,visibility:!0,variation:!0,isTaxonomy:!1}].sort((e,i)=>e.position-i.position),attributeKeys=attributeMeta.map(e=>e.columnKey),log=(...e)=>{logField?logField.innerHTML+="<br>"+e.join("    "):console.log(...e)},updateProgress=e=>{progressBar?progressBar.value=e:console.log("Progress is now at",e)},excelToJSON=e=>{const i=e.SheetNames,t=[];return i.forEach(i=>{const r=window.XLSX,n=r.utils.sheet_to_json(e.Sheets[i]),o={},a={},s={};n.filter(e=>1==e.Shop_Produkt_Ja_Nein).forEach((e,i)=>{try{updateProgress(Math.max(i-1,0)/n.length);const r={sku:null,parent:null,name:null,price:null,categories:[],imageCode:null,minimumOrderQuantity:null,attributes:{},discountGroups:[],bulkDiscount:[]};if(!("Artikelname_neu"in e&&e.Artikelname_neu.trim().length>0))throw new Error(`The product on line ${i} is ignored as doesn't have the field "Artikelname_neu"`);if(r.name=e.Artikelname_neu.trim(),!("Artikel_Nummer_Produkt"in e))throw new Error(`The product on line ${i} is ignored as it doesn't have a sku!`);if(r.sku=e.Artikel_Nummer_Produkt,!("Artikel_Bilder_Code"in e))throw new Error(`The product on line ${i} is ignored as it doesn't have an image!`);if(r.imageCode=e.Artikel_Bilder_Code,"Stückzahl pro Einheit"in e&&e["Stückzahl pro Einheit"]&&"Einheit"in e&&(e.Einheit=`${e.Einheit} (${e["Stückzahl pro Einheit"]} STK)`),"Breite"in e&&(r.width=parseFloat(e.Breite)),"Höhe"in e&&(r.height=parseFloat(e["Höhe"])),"Thema"in e&&-1===r.categories.indexOf(e.Thema)&&r.categories.push(e.Thema),"Mindestbestellmenge"in e&&(r.minimumOrderQuantity=parseInt(e.Mindestbestellmenge,10)),!("Einzelpreis"in e))throw new Error(`The product on line ${i} is ignored as doesn't have the field "Einzelpreis"`);if("string"==typeof e.Einzelpreis&&e.Einzelpreis.includes("CHF"))r.price=parseFloat(e.Einzelpreis.trim().split(" ")[1]);else{if("number"!=typeof e.Einzelpreis)throw new Error(`Ignoring product on line ${i}, productData["Einzelpreis"]: "${e.Einzelpreis}" is invalid`);r.price=e.Einzelpreis}if(r.price<=0)throw new Error(`The product on line ${i} is ignored as doesn't have a valid field "Einzelpreis"`);for(let i in e)if(-1!==i.indexOf("_Rabattberechtigt")){const e=i.replace("_Rabattberechtigt","");r.discountGroups.push(e)}"Produktgruppe_Shop"in e&&(e.Produktgruppe_Shop in a?(a[e.Produktgruppe_Shop].forEach(e=>{if(!r.discountGroups.includes(e))throw new Error(`The product on line ${i} is ignored as it misses the discount group "${e}"! (Compared with the first product in the group "${r.parent})"`)}),r.discountGroups.forEach(t=>{if(!a[e.Produktgruppe_Shop].includes(t))throw new Error(`The product on line ${i} is ignored as it has the additional discount group "${t}"! (Compared with the first product in the group "${r.parent})"`)})):a[e.Produktgruppe_Shop]=[...r.discountGroups]);for(let i in e)if(-1!==i.indexOf("VP Staffel ")){const t=parseFloat(e[i].toString().replace("CHF","").trim()),n=parseInt(i.replace("VP Staffel ","").trim(),10);t>0&&n>0&&r.bulkDiscount.push({ppu:t,qty:n})}if("Produktgruppe_Shop"in e)if(r.parent=e.Produktgruppe_Shop.trim(),r.parent in o){const t=attributeKeys.filter(i=>i in e);o[r.parent].forEach(n=>{if(!t.includes(n))throw new Error(`The product on line ${i} is ignored as it misses the attribute "${n}"! (Compared with the first product in the group "${r.parent})"`);r.attributes[n]=[e[n]]}),t.forEach(e=>{if(!o[r.parent].includes(e))throw new Error(`The product on line ${i} is ignored as it has the aditional attribute "${e}"! (Compared with the first product in the group "${r.parent})"`);s[r.parent].attributes[e].push(...r.attributes[e].filter(i=>!s[r.parent].attributes[e].includes(i)))})}else o[r.parent]=[],attributeKeys.filter(i=>i in e).forEach(i=>{o[r.parent].push(i),r.attributes[i]=[e[i]]}),s[r.parent]={sku:r.parent,name:null,parent:null,imageCode:null,price:null,minimumOrderQuantity:0,attributes:JSON.parse(JSON.stringify(r.attributes)),categories:r.categories,discountGroups:[],bulkDiscount:[]},t.push(s[r.parent]);t.push(r)}catch(e){return log("Error",e.message)}}),updateProgress(1)}),t},productsToCSV=e=>{const i=e.reduce((e,i)=>Math.max(e,Object.keys(i.attributes).length),0),t=[];for(let e=0;e<i;e++)t.push(`Attribute ${e} Name`),t.push(`Attribute ${e} Global`),t.push(`Attribute ${e} Value(s)`);let r;return["Type","SKU","Parent","Name","Images","Regular Price","Length","Width","Height","Categories","Discount Groups","Meta: _feuerschutz_variable_bulk_discount_enabled","Meta: _feuerschutz_bulk_discount","Meta: _feuerschutz_min_order_quantity",...t].join(",")+"\n"+e.map(e=>{const i=[];for(let t in e.attributes){const r=attributeMeta.find(e=>e.columnKey===t);i.push(r.name,r.isTaxonomy?"1":"0",e.attributes[t].join(", "))}const t=null!==e.parent?"variation":Object.keys(e.attributes).length>0?"variable":"simple";return'"'+[t,e.sku,e.parent,e.name,e.imageCode,e.price,e.length,e.width,e.height,e.categories.join(","),e.discountGroups.join(","),"variation"===t&&e.bulkDiscount.length>0?"1":"0",e.bulkDiscount.length>0?JSON.stringify(e.bulkDiscount):"",e.minimumOrderQuantity,...i].map(e=>e?e.toString():"").map(e=>e.replace(/"/g,'""')).join('","')+'"'}).join("\n")},readExcel=e=>{const i=reader.result,t=window.XLSX,r=t.read(i,{type:"binary"}),n=excelToJSON(r),o="data:text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(n));downloadJSON.setAttribute("href",o),downloadJSON.setAttribute("download","products.json"),downloadJSON.style.display="block";const a=productsToCSV(n);downloadCSV.setAttribute("href","data:text/csv;charset=utf-8,"+encodeURIComponent(a)),downloadCSV.setAttribute("download","products.csv"),downloadCSV.style.display="block"};window.addEventListener("load",()=>{dropField=document.querySelector("div#drop-excel"),logField=document.querySelector("div#log-filename"),downloadJSON=document.querySelector("a#download-json"),downloadCSV=document.querySelector("a#download-csv"),progressBar=document.querySelector("progress#progress"),dropField.addEventListener("dragover",e=>{e.preventDefault(),e.stopPropagation(),dropField.classList.add("dragging")}),dropField.addEventListener("dragleave",e=>{e.preventDefault(),e.stopPropagation(),dropField.classList.remove("dragging")}),dropField.addEventListener("drop",e=>{e.stopPropagation(),e.preventDefault();const i=e.dataTransfer.files;if(i.length>1)return alert("Only one file at a time!");(reader=new FileReader).onload=readExcel,log("Reading and parsing "+i[0].name+" ..."),reader.readAsBinaryString(i[0])})});
//# sourceMappingURL=excel-json-product.js.map